name: Generate RULE-SET for Premium Edition of Clash
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "custom_icloud=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/icloud.txt" >> $GITHUB_ENV
          echo "custom_tld_not_cn=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/tld-!cn.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_reject=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_proxy=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_direct=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_gfw=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/gfw.txt" >> $GITHUB_ENV
          echo "felixonmars_apple=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> $GITHUB_ENV
          echo "cn_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/cn.txt" >> $GITHUB_ENV
          echo "lan_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/private.txt" >> $GITHUB_ENV
          echo "telegram_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/telegram.txt" >> $GITHUB_ENV
        shell: bash

      - name: Generate icloud.txt file
        run: |
          echo "# icloud" > icloud.txt
          curl -sSL ${custom_icloud} | grep -E "^(full|domain):" | awk -F ':' '{printf "+.%s\n", $2}' | sed "s/|/'/g" >> icloud.txt

      - name: Generate apple.txt file
        run: |
          echo "# apple" > apple.txt
          curl -sSL ${felixonmars_apple} | perl -ne '/^server=\/([^\/]+)\// && print "+.$1\n"' | sed "s/|/'/g" >> apple.txt

      - name: Generate direct.txt file
        run: |
          echo "# direct" > direct.txt
          curl -sSL ${Loyalsoldier_direct} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(full:)([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "$2\n"' | sed "s/|/'/g" >> direct.txt
          curl -sSL ${Loyalsoldier_direct} | grep -Ev "^(regexp|keyword|full):" | perl -ne '/^(domain:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "+.$2\n"' | sed "s/|/'/g" >> direct.txt

      - name: Generate proxy.txt file
        run: |
          echo "# proxy " > proxy.txt
          curl -sSL ${Loyalsoldier_proxy} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(full:)([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "$2\n"' | sed "s/|/'/g" >> proxy.txt
          curl -sSL ${Loyalsoldier_proxy} | grep -Ev "^(regexp|keyword|full):" | perl -ne '/^(domain:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "+.$2\n"' | sed "s/|/'/g" >> proxy.txt

      - name: Generate reject.txt file
        run: |
          echo "# reject " > reject.txt
          curl -sSL ${Loyalsoldier_reject} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "+.$2\n"' | sed "s/|/'/g" >> reject.txt

      - name: Generate gfw.txt file
        run: |
          echo "# gfw" > gfw.txt
          curl -sSL ${Loyalsoldier_gfw} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "+.$2\n"' | sed "s/|/'/g" >> gfw.txt

      - name: Generate tld-not-cn.txt file
        run: |
          echo "# tld-not-cn" > tld-not-cn.txt
          curl -sSL "${custom_tld_not_cn}" | perl -ne '/^domain:([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "+.$1\n"' | sed "s/|/'/g" >> tld-not-cn.txt

      - name: Generate cncidr.txt file
        run: |
          echo "# cncidr" > cncidr.txt
          curl -sSL ${cn_cidr} | perl -ne '/(.+\/\d+)/ && print "$1\n"' | sed "s/|/'/g" >> cncidr.txt

      - name: Generate telegramcidr.txt file
        run: |
          echo "# telegramcidr" > telegramcidr.txt
          curl -sSL ${telegram_cidr} | perl -ne '/(.+\/\d+)/ && print "$1\n"' | sed "s/|/'/g" >> telegramcidr.txt

      - name: Generate lancidr.txt file
        run: |
          echo "# lancidr" > lancidr.txt
          curl -sSL ${lan_cidr} | perl -ne '/(.+\/\d+)/ && print "$1\n"' | sed "s/|/'/g" >> lancidr.txt

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          cp *.txt ./publish/

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin release

